#!/usr/bin/env python3

import rospy
from std_msgs.msg import Header
from std_msgs.msg import String

class MTpub:
    def __init__(self):
        self.pub = rospy.Publisher('time', Header, queue_size=10)
        rospy.Timer(rospy.Duration(secs=2), self.print_hello)
        self.pub_01 = rospy.Publisher('message2', String, queue_size=10)
        rospy.Timer(rospy.Duration(secs=2), self.time_pub)


        self.data = Header()
        self.msg = String()
        
        self.i=0
        # Alt + 화살표
        
    def print_hello(self, _event):
        self.data.frame_id = "base time by MTpub"
        self.data.stamp = rospy.Time.now()
        rospy.loginfo(self.data.frame_id)
        rospy.loginfo(f'{self.data.stamp.secs} : {self.data.stamp.nsecs}')
        self.pub.publish(self.data)
        

    def time_pub(self, _event):
        self.msg.data = f"hello, ROS! noetic {self.i}"
        rospy.loginfo(self.msg.data)
        self.pub_01.publish(self.msg)
        self.i += 1
    


def main():
    rospy.init_node('mtpub')
    node = MTpub()
    while not rospy.is_shutdown():
        rospy.spin()

if __name__ == "__main__":
    try:
        main()
    except rospy.ROSInterruptException:
        pass